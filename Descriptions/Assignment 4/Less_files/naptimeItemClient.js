define("pages/open-course/common/naptimeItemClient",["require","exports","module","q","underscore","js/lib/path","js/lib/stringKeyTuple","jsuri","bundles/phoenix/template/models/userIdentity","pages/open-course/common/naptimeApi","memoize!pages/open-course/common/promises/courseGrade","memoize!pages/open-course/common/promises/courseViewGrade","memoize!pages/open-course/common/promises/courseProgress"],function(require,exports,module){"use strict";function jqXHRToPromiseWithId(e){return t(e).then(function(t){return{body:t,createdId:e.getResponseHeader("X-Coursera-Id")}})}function makeUri(r,e){var t=new u(r);return e&&_(e).each(function(e,r){t.addQueryParam(r,e)}),t}var t=require("q"),_=require("underscore"),i=require("js/lib/path"),s=require("js/lib/stringKeyTuple"),u=require("jsuri"),p=require("bundles/phoenix/template/models/userIdentity"),r=require("pages/open-course/common/naptimeApi"),n=require("memoize!pages/open-course/common/promises/courseGrade"),a=require("memoize!pages/open-course/common/promises/courseViewGrade"),o=require("memoize!pages/open-course/common/promises/courseProgress"),e=function NaptimeItemClient(e){this.itemMetadata=e};e.prototype.create=function(s,i,u,e){var p=makeUri(s,u);void 0===e&&(e=!0);var m={data:i};return t.all([n(this.itemMetadata.get("course").get("id")),a(this.itemMetadata.get("course").get("id")),o(this.itemMetadata.get("course").get("slug")),jqXHRToPromiseWithId(r.post(p.toString(),m))]).spread(function(t,r,o,s){return e&&(t.refresh(),r.refresh(),o.trigger("refresh")),s})},e.prototype.get=function(e,s,n,a){var u=makeUri(i.join(e,s),n);return t.all([r.get(u.toString()),o(this.itemMetadata.get("course").get("slug"))]).spread(function(e,t){return a&&t.trigger("refresh"),e})},e.prototype.getWithCourseItemId=function(e,t,r){var o=this.itemMetadata.get("course").get("id"),i=this.itemMetadata.get("id"),n=s.tupleToStringKey([o,i]);return this.get(e,n,t,r)},e.prototype.getWithUserCourseItemId=function(e,t,r){var o=p.get("id"),i=this.itemMetadata.get("course").get("id"),n=this.itemMetadata.get("id"),a=s.tupleToStringKey([o.toString(),i,n]);return this.get(e,a,t,r)},e.prototype.finder=function(e,s,i,n){var a=makeUri(e,_({q:s}).extend(i||{}));return t.all([r.get(a.toString()),o(this.itemMetadata.get("course").get("slug"))]).spread(function(e,t){return n&&t.trigger("refresh"),e})},e.prototype.action=function(e,t,o){var s=makeUri(e,_({action:t}).extend(o||{}));return r.post(s.toString())},module.exports=e});